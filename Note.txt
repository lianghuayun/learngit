Study-note for Git:
*初始化一个Git仓库：*******************************
1. mkdir 目录名          创建空目录
2. cd    目录名          转到目录下
3. pwd   显示当前所在目录
4. git init              将目录变成Git可管理的仓库

*添加文件到Git仓库：*******************************
1. git add   文件名      
2. git commit -m "提交说明"
//commit可以一次提交很多文件
//dir或ls   查看当前目录的文件

*把修改提交到Git仓库：*****************************
1. git add   文件名      
2. git commit -m "提交说明"
//git status告诉你有文件被修改过
//git diff  查看修改内容
//git log   查看历史记录
//git log --pretty=oneline

*版本退回：****************************************
//git reset --hard HEAD^
//git reset --hard 1094a(版本号不必要写全)
//git reflog 查看版本号记录

*工作区与暂存区************************************
工作区：电脑里能看到的目录，比如我的learngit文件夹就是一个工作区。
版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
暂存区：版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区。
//我们创建Git版本库时，Git自动为我们创建了唯一一个master分支,以及指向master的一个指针叫HEAD
//git add把文件添加进去，实际上就是把文件修改添加到暂存区；
//git commit提交更改，   实际上就是把暂存区的所有内容提交到当前分支。

*管理修改******************************************
//Git跟踪并管理的是修改，而非文件。
//cat 文件名  查看文件内容
*撤销修改******************************************
//git checkout -- 文件名  撤销修改（未提交，仅在工作区）
//git reset HEAD  文件名  撤销修改（未提交，仅在暂存区）  
*删除文件******************************************
//rm     文件名   删除文件
//git rm 文件名   版本库删除文件  （下一步需commit提交）
//git checkout -- 文件名  撤销修改（未提交，仅在工作区）